/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable, Inject } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { DISQUS_SHORTNAME } from './disqus.model';
import * as i0 from "@angular/core";
import * as i1 from "./disqus.model";
import * as i2 from "@angular/common";
var DisqusService = /** @class */ (function () {
    function DisqusService(shortname, _document) {
        this.shortname = shortname;
        this._document = _document;
    }
    Object.defineProperty(DisqusService.prototype, "DISQUS", {
        get: /**
         * @return {?}
         */
        function () {
            return this._document.defaultView.DISQUS;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisqusService.prototype, "disqus_config", {
        get: /**
         * @return {?}
         */
        function () {
            return this._document.defaultView.disqus_config;
        },
        set: /**
         * @param {?} config
         * @return {?}
         */
        function (config) {
            this._document.defaultView.disqus_config = config;
        },
        enumerable: true,
        configurable: true
    });
    DisqusService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    DisqusService.ctorParameters = function () { return [
        { type: String, decorators: [{ type: Inject, args: [DISQUS_SHORTNAME,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
    ]; };
    /** @nocollapse */ DisqusService.ngInjectableDef = i0.defineInjectable({ factory: function DisqusService_Factory() { return new DisqusService(i0.inject(i1.DISQUS_SHORTNAME), i0.inject(i2.DOCUMENT)); }, token: DisqusService, providedIn: "root" });
    return DisqusService;
}());
export { DisqusService };
if (false) {
    /** @type {?} */
    DisqusService.prototype.shortname;
    /** @type {?} */
    DisqusService.prototype._document;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzcXVzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZGlzcXVzLyIsInNvdXJjZXMiOlsibGliL2Rpc3F1cy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7O0lBbUJoRCx1QkFBOEMsU0FBaUIsRUFBNEIsU0FBYztRQUEzRCxjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQTRCLGNBQVMsR0FBVCxTQUFTLENBQUs7S0FDeEc7SUFiRCxzQkFBSSxpQ0FBTTs7OztRQUFWO1lBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUM7U0FDMUM7OztPQUFBO0lBRUQsc0JBQUksd0NBQWE7Ozs7UUFBakI7WUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQztTQUNqRDs7Ozs7UUFFRCxVQUFrQixNQUFXO1lBQzNCLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUM7U0FDbkQ7OztPQUpBOztnQkFYRixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7OzZDQWVlLE1BQU0sU0FBQyxnQkFBZ0I7Z0RBQTZCLE1BQU0sU0FBQyxRQUFROzs7d0JBckJuRjs7U0FPYSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERPQ1VNRU5UIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRElTUVVTX1NIT1JUTkFNRSB9IGZyb20gJy4vZGlzcXVzLm1vZGVsJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIERpc3F1c1NlcnZpY2Uge1xyXG5cclxuICBnZXQgRElTUVVTKCk6IGFueSB7XHJcbiAgICByZXR1cm4gdGhpcy5fZG9jdW1lbnQuZGVmYXVsdFZpZXcuRElTUVVTO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGRpc3F1c19jb25maWcoKTogYW55IHtcclxuICAgIHJldHVybiB0aGlzLl9kb2N1bWVudC5kZWZhdWx0Vmlldy5kaXNxdXNfY29uZmlnO1xyXG4gIH1cclxuXHJcbiAgc2V0IGRpc3F1c19jb25maWcoY29uZmlnOiBhbnkpIHtcclxuICAgIHRoaXMuX2RvY3VtZW50LmRlZmF1bHRWaWV3LmRpc3F1c19jb25maWcgPSBjb25maWc7XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvciggQEluamVjdChESVNRVVNfU0hPUlROQU1FKSBwdWJsaWMgc2hvcnRuYW1lOiBzdHJpbmcsIEBJbmplY3QoRE9DVU1FTlQpIHByaXZhdGUgX2RvY3VtZW50OiBhbnkpIHtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ==