{"version":3,"file":"ngx-disqus.js.map","sources":["ng://ngx-disqus/lib/disqus.model.ts","ng://ngx-disqus/lib/disqus.service.ts","ng://ngx-disqus/lib/disqus.component.ts","ng://ngx-disqus/lib/disqus.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const DISQUS_SHORTNAME = new InjectionToken<string>('DISQUS_SHORTNAME');\r\n\r\nexport interface DisqusComment {\r\n  id: number;\r\n  name: string;\r\n}\r\nexport interface DisqusReady {\r\n  height: number;\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { DISQUS_SHORTNAME } from './disqus.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DisqusService {\r\n\r\n  get DISQUS(): any {\r\n    return this._document.defaultView.DISQUS;\r\n  }\r\n\r\n  get disqus_config(): any {\r\n    return this._document.defaultView.disqus_config;\r\n  }\r\n\r\n  set disqus_config(config: any) {\r\n    this._document.defaultView.disqus_config = config;\r\n  }\r\n\r\n  constructor( @Inject(DISQUS_SHORTNAME) public shortname: string, @Inject(DOCUMENT) private _document: any) {\r\n  }\r\n}\r\n\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  Renderer2,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { DisqusService } from './disqus.service';\r\nimport { DisqusComment, DisqusReady } from './disqus.model';\r\n\r\n@Component({\r\n  selector: 'disqus',\r\n  template: '<div id=\"disqus_thread\"></div>',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class DisqusComponent implements OnChanges {\r\n\r\n  /** DISQUS options */\r\n  @Input() url: string;\r\n  @Input() identifier: string;\r\n  @Input() title: string;\r\n  @Input() category: string;\r\n  @Input() language: string;\r\n\r\n  /** DISQUS events */\r\n  @Output() newComment = new EventEmitter<DisqusComment>(true);\r\n  @Output() ready = new EventEmitter<DisqusReady>(true);\r\n  @Output() paginate = new EventEmitter<any>(true);\r\n\r\n  constructor(private renderer: Renderer2, private el: ElementRef, private dService: DisqusService) {\r\n   }\r\n\r\n  ngOnChanges() {\r\n    /** Reset Disqus if any input changed */\r\n\r\n    if (!this.dService.DISQUS) {\r\n      this.addDisqusScript();\r\n    } else {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  /** Add DISQUS script */\r\n  addDisqusScript() {\r\n\r\n    /** Set DISQUS config */\r\n    this.dService.disqus_config = this.getConfig();\r\n\r\n    const disqusScript = this.renderer.createElement('script');\r\n    disqusScript.src = `//${this.dService.shortname}.disqus.com/embed.js`;\r\n    disqusScript.async = true;\r\n    disqusScript.type = 'text/javascript';\r\n    this.renderer.setAttribute(disqusScript, 'data-timestamp', new Date().getTime().toString());\r\n    this.renderer.appendChild(this.el.nativeElement, disqusScript);\r\n  }\r\n\r\n  /** Reset DISQUS with the new config */\r\n  reset() {\r\n    this.dService.DISQUS.reset({\r\n      reload: true,\r\n      config: this.getConfig()\r\n    });\r\n  }\r\n\r\n  /** Create DISQUS config from the inputs */\r\n  getConfig() {\r\n    const self = this;\r\n    return function () {\r\n      this.page.identifier = self.identifier;\r\n      this.page.url = self.validateUrl(self.url);\r\n      this.page.title = self.title;\r\n      this.category_id = self.category;\r\n      this.language = self.language;\r\n\r\n      /* Available callbacks are afterRender, onInit, onNewComment, onPaginate, onReady, preData, preInit, preReset */\r\n      this.callbacks.onNewComment = [(e) => {\r\n        self.newComment.emit(e);\r\n      }];\r\n\r\n      this.callbacks.onReady = [(e) => {\r\n        self.ready.emit(e);\r\n      }];\r\n\r\n      this.callbacks.onPaginate = [(e) => {\r\n        self.paginate.emit(e);\r\n      }];\r\n    };\r\n  }\r\n\r\n  validateUrl(url: string) {\r\n    /** Validate URL input */\r\n    if (url) {\r\n      const r = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\r\n\r\n      if (r.test(url)) {\r\n        return url;\r\n      } else {\r\n        console.warn('[Disqus]: Invalid URL');\r\n      }\r\n    }\r\n    /** DISQUS will fallback to \"Window.location.href\" when URL is undefined */\r\n    return undefined;\r\n  }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { DisqusComponent } from './disqus.component';\r\nimport { DISQUS_SHORTNAME } from './disqus.model';\r\n\r\n@NgModule({\r\n  declarations: [DisqusComponent],\r\n  exports: [DisqusComponent]\r\n})\r\nexport class DisqusModule {\r\n  static forRoot(shortname: string): ModuleWithProviders {\r\n    return {\r\n      ngModule: DisqusModule,\r\n      providers: [\r\n        { provide: DISQUS_SHORTNAME, useValue: shortname }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}
