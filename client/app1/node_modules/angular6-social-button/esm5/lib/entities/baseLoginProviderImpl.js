/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
var /**
 * @abstract
 */
BaseLoginProviderImpl = /** @class */ (function () {
    function BaseLoginProviderImpl() {
    }
    /**
     * @param {?} obj
     * @param {?} onload
     * @return {?}
     */
    BaseLoginProviderImpl.prototype.loadScript = /**
     * @param {?} obj
     * @param {?} onload
     * @return {?}
     */
    function (obj, onload) {
        if (document.getElementById(obj.name)) {
            return;
        }
        /** @type {?} */
        var signInJS = document.createElement('script');
        signInJS.async = true;
        signInJS.src = obj.url;
        signInJS.onload = onload;
        if (obj.name === 'linkedin') {
            signInJS.async = false;
            signInJS.text = ('api_key: ' + obj.id).replace('\'', '');
        }
        document.head.appendChild(signInJS);
    };
    return BaseLoginProviderImpl;
}());
/**
 * @abstract
 */
export { BaseLoginProviderImpl };
if (false) {
    /** @type {?} */
    BaseLoginProviderImpl.prototype.TYPE;
    /**
     * @abstract
     * @return {?}
     */
    BaseLoginProviderImpl.prototype.initialize = function () { };
    /**
     * @abstract
     * @param {?=} scopes
     * @return {?}
     */
    BaseLoginProviderImpl.prototype.signIn = function (scopes) { };
    /**
     * @abstract
     * @return {?}
     */
    BaseLoginProviderImpl.prototype.signOut = function () { };
    /**
     * @abstract
     * @param {?=} share
     * @return {?}
     */
    BaseLoginProviderImpl.prototype.sharing = function (share) { };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZUxvZ2luUHJvdmlkZXJJbXBsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhcjYtc29jaWFsLWJ1dHRvbi8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdGllcy9iYXNlTG9naW5Qcm92aWRlckltcGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUdBOzs7QUFBQTtJQUdJO0tBQWdCOzs7Ozs7SUFRbEIsMENBQVU7Ozs7O0lBQVYsVUFBVyxHQUF1QixFQUFFLE1BQVc7UUFDN0MsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQUMsTUFBTSxDQUFDO1NBQUU7O1FBQ2xELElBQUksUUFBUSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDaEQsUUFBUSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDdEIsUUFBUSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDO1FBQ3ZCLFFBQVEsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3pCLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQztZQUM1QixRQUFRLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUN2QixRQUFRLENBQUMsSUFBSSxHQUFHLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQzFEO1FBQ0QsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDckM7Z0NBekJIO0lBMEJDLENBQUE7Ozs7QUF2QkQsaUNBdUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9naW5Qcm92aWRlciB9IGZyb20gJy4vbG9naW5Qcm92aWRlcic7XHJcbmltcG9ydCB7IFNvY2lhbFVzZXIsIExvZ2luUHJvdmlkZXJDbGFzcyB9IGZyb20gJy4vdXNlcic7XHJcblxyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQmFzZUxvZ2luUHJvdmlkZXJJbXBsIGltcGxlbWVudHMgTG9naW5Qcm92aWRlciB7XHJcblxyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge31cclxuXHJcbiAgYWJzdHJhY3QgaW5pdGlhbGl6ZSgpOiBQcm9taXNlPFNvY2lhbFVzZXI+O1xyXG4gIGFic3RyYWN0IHNpZ25JbihzY29wZXM/OltzdHJpbmddKTogUHJvbWlzZTxTb2NpYWxVc2VyPjtcclxuICBhYnN0cmFjdCBzaWduT3V0KCk6IFByb21pc2U8YW55PjtcclxuICBhYnN0cmFjdCBzaGFyaW5nKHNoYXJlPzphbnkpOlByb21pc2U8YW55PjtcclxuICBhYnN0cmFjdCBUWVBFOiBzdHJpbmc7XHJcblxyXG4gIGxvYWRTY3JpcHQob2JqOiBMb2dpblByb3ZpZGVyQ2xhc3MsIG9ubG9hZDogYW55KTogdm9pZCB7XHJcbiAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob2JqLm5hbWUpKSB7IHJldHVybjsgfVxyXG4gICAgbGV0IHNpZ25JbkpTID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XHJcbiAgICBzaWduSW5KUy5hc3luYyA9IHRydWU7XHJcbiAgICBzaWduSW5KUy5zcmMgPSBvYmoudXJsO1xyXG4gICAgc2lnbkluSlMub25sb2FkID0gb25sb2FkO1xyXG4gICAgaWYgKG9iai5uYW1lID09PSAnbGlua2VkaW4nKSB7XHJcbiAgICAgIHNpZ25JbkpTLmFzeW5jID0gZmFsc2U7XHJcbiAgICAgIHNpZ25JbkpTLnRleHQgPSAoJ2FwaV9rZXk6ICcgKyBvYmouaWQpLnJlcGxhY2UoJ1xcJycsICcnKTtcclxuICAgIH1cclxuICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2lnbkluSlMpO1xyXG4gIH1cclxufSJdfQ==